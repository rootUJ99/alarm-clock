{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ujwal/Desktop/UJwal/projects/alram-clock/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [currDateTime, setCurrDateTime] = useState(new Date());\n  const [alramDateTime, setAlramDateTime] = useState(null);\n  useEffect(() => {\n    console.log('Setting  Timer');\n    const TimerId = setInterval(() => {\n      setCurrDateTime(new Date());\n\n      if (currDateTime === alramDateTime) {\n        console.log('tick tick');\n      }\n    }, 1000 * 60);\n    return () => {\n      console.log('Clearing Timer');\n      clearInterval(TimerId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currDateTime.toLocaleTimeString(), alramDateTime && alramDateTime.toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const date = new Date();\n        setAlramDateTime(date.getMinutes() + 2);\n      },\n      children: \"SetAlram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7NNhFiXy7imw0JCW/jC/72qraQo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ujwal/Desktop/UJwal/projects/alram-clock/src/App.js"],"names":["useEffect","useState","App","currDateTime","setCurrDateTime","Date","alramDateTime","setAlramDateTime","console","log","TimerId","setInterval","clearInterval","toLocaleTimeString","date","getMinutes"],"mappings":";;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,WAAP;;AAEA,MAAOC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAhD;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAChCP,MAAAA,eAAe,CAAC,IAAIC,IAAJ,EAAD,CAAf;;AACA,UAAIF,YAAY,KAAKG,aAArB,EAAoC;AAClCE,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,KAL0B,EAKxB,OAAM,EALkB,CAA3B;AAOA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAG,MAAAA,aAAa,CAACF,OAAD,CAAb;AACD,KAHD;AAID,GAdQ,EAcP,EAdO,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGP,YAAY,CAACU,kBAAb,EADH,EAEGP,aAAa,IAAIA,aAAa,CAACO,kBAAd,EAFpB,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AACnB,cAAMC,IAAI,GAAG,IAAIT,IAAJ,EAAb;AACAE,QAAAA,gBAAgB,CACdO,IAAI,CAACC,UAAL,KAAoB,CADN,CAAhB;AAGD,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCD;;GAAOb,G;;KAAAA,G;AAoCP,eAAeA,GAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\n\nconst  App = () => {\n  const [currDateTime, setCurrDateTime] = useState(new Date());\n  const [alramDateTime, setAlramDateTime] = useState(null);\n\n  useEffect(() => {\n    console.log('Setting  Timer')\n\n    const TimerId = setInterval(() => {\n      setCurrDateTime(new Date());\n      if (currDateTime === alramDateTime) {\n        console.log('tick tick');\n      }\n    }, 1000 *60);\n\n    return () => {\n      console.log('Clearing Timer')\n      clearInterval(TimerId)\n    }\n  },[]);\n\n  return (\n    <div className=\"App\">\n      {currDateTime.toLocaleTimeString()}\n      {alramDateTime && alramDateTime.toLocaleTimeString()}\n      <button onClick={()=>{\n        const date = new Date();\n        setAlramDateTime(\n          date.getMinutes() + 2\n        );\n      }}>\n      SetAlram\n    </button> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
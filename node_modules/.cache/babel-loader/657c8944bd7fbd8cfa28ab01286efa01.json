{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ujwal/Desktop/UJwal/projects/alram-clock/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [currDateTime, setCurrDateTime] = useState(new Date());\n  const [alramDateTime, setAlramDateTime] = useState(new Date());\n  useEffect(() => {\n    const TimerId = setInterval(() => {\n      setCurrDateTime(new Date());\n      console.log(currDateTime.toLocaleTimeString(), alramDateTime.toLocaleTimeString());\n\n      if (alramDateTime && currDateTime.toLocaleTimeString() === alramDateTime.toLocaleTimeString()) {\n        console.log('tick tick');\n      }\n    }, 1000);\n    return () => {\n      clearInterval(TimerId);\n    };\n  }, [currDateTime, alramDateTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currDateTime.toLocaleTimeString(), alramDateTime && alramDateTime.toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const date = new Date();\n        setAlramDateTime(new Date(date.setMinutes(date.getMinutes() + 1)));\n      },\n      children: \"SetAlram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QsylDP/KXJc6T0yuwiy0aSRM3nM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ujwal/Desktop/UJwal/projects/alram-clock/src/App.js"],"names":["useEffect","useState","App","currDateTime","setCurrDateTime","Date","alramDateTime","setAlramDateTime","TimerId","setInterval","console","log","toLocaleTimeString","clearInterval","date","setMinutes","getMinutes"],"mappings":";;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,WAAP;;AAEA,MAAOC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAhD;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAlD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAGC,WAAW,CAAC,MAAM;AAChCL,MAAAA,eAAe,CAAC,IAAIC,IAAJ,EAAD,CAAf;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACS,kBAAb,EAAZ,EAAgDN,aAAa,CAACM,kBAAd,EAAhD;;AACA,UAAIN,aAAa,IAAIH,YAAY,CAACS,kBAAb,OAAsCN,aAAa,CAACM,kBAAd,EAA3D,EAA+F;AAC7FF,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,KAN0B,EAMxB,IANwB,CAA3B;AAQA,WAAO,MAAM;AACXE,MAAAA,aAAa,CAACL,OAAD,CAAb;AACD,KAFD;AAGD,GAZQ,EAYP,CAACL,YAAD,EAAeG,aAAf,CAZO,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGH,YAAY,CAACS,kBAAb,EADH,EAEGN,aAAa,IAAIA,aAAa,CAACM,kBAAd,EAFpB,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AACnB,cAAME,IAAI,GAAG,IAAIT,IAAJ,EAAb;AACAE,QAAAA,gBAAgB,CACd,IAAIF,IAAJ,CAASS,IAAI,CAACC,UAAL,CAAgBD,IAAI,CAACE,UAAL,KAAoB,CAApC,CAAT,CADc,CAAhB;AAGD,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhCD;;GAAOd,G;;KAAAA,G;AAkCP,eAAeA,GAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\n\nconst  App = () => {\n  const [currDateTime, setCurrDateTime] = useState(new Date());\n  const [alramDateTime, setAlramDateTime] = useState(new Date());\n\n  useEffect(() => {\n    const TimerId = setInterval(() => {\n      setCurrDateTime(new Date());\n      console.log(currDateTime.toLocaleTimeString(),  alramDateTime.toLocaleTimeString())\n      if (alramDateTime && currDateTime.toLocaleTimeString() === alramDateTime.toLocaleTimeString()) {\n        console.log('tick tick');\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(TimerId)\n    }\n  },[currDateTime, alramDateTime]);\n\n  return (\n    <div className=\"App\">\n      {currDateTime.toLocaleTimeString()}\n      {alramDateTime && alramDateTime.toLocaleTimeString()}\n      <button onClick={()=>{\n        const date = new Date();\n        setAlramDateTime(\n          new Date(date.setMinutes(date.getMinutes() + 1))\n        );\n      }}>\n      SetAlram\n    </button> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}